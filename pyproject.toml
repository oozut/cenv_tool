[tool.poetry]
name = "cenv_tool"
version = "1.1.2"
description = "conda environment creation and update from meta.yaml"
license = "MIT"
authors = ["Simon Kallfass <skallfass@ouroboros.info>"]
readme = "README.md"
homepage = "https://www.cenv.ouroboros.info"
repository = "https://github.com/skallfass/cenv_tool"
keywords = ["conda", "environment", "dependencies"]
classifiers = [
    "Operating System :: Unix",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7"
]


[tool.poetry.dependencies]
python = "==3.*,>=3.7.0"
attrs = "~19"
jinja2 = ">=2"
pyyaml = "^5"
six = ">=1.12"
marshmallow = ">=2.19,<3"


[tool.poetry.dev-dependencies]
coverage-badge = "==1.*,>=1.0.0"
ipython = ">=7"
monkeytype = ">=19"
pylint = ">=2"
pytest = "==5.*,>=5.0.0"
pytest-cov = "==2.*,>=2.0.0"
pytest-datafiles = "==2.*,>=2.0.0"
yapf = ">=0"
sphinx = "==2.*,>=2.0.0"
sphinx-autodoc-typehints = "==1.*,>=1.0.0"
sphinx_rtd_theme = "==0.*,>=0.0.0"


[tool.poetry.scripts]
cenv = "cenv_tool.project:main"
init_cenv = "cenv_tool.init_cenv:main"


[tool.poetry.extras]
docs = ["sphinx", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]
tests = ["pytest", "pytest-cov", "pytest-datafiles"]




[tool.dephell.main]
# read from poetry format
from = {format = "poetry", path = "pyproject.toml"}
# drop dev-dependencies
envs = ["main"]
# and convert into setup.py
to = {format = "setuppy", path = "setup.py"}
versioning = "semver"


[tool.dephell.lock]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "poetrylock", path = "poetry.lock"}


[tool.dephell.docs]
# read dependencies from poetry format
from = {format = "poetry", path = "pyproject.toml"}
# install only `docs` extra dependencies
envs = ["main", "devs", "docs"]
# run this command:
# command = "mkdocs build"
command = "sphinx-apidoc -f -o docs/source cenv_tool && sphinx-build -W docs/source docs/build"


[tool.dephell.pytest]
# read dependencies from setup.py
from = {format = "poetry", path = "pyproject.toml"}
# install main dependencies and `tests` extra dependencies
envs = ["main", "tests"]
tests = ["tests", "cenv_tool", "setup.cfg"]
# run command `pytest`
command = "pytest -c setup.cfg --cache-clear"
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
